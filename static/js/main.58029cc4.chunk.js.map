{"version":3,"sources":["helper.js","chart/chart.component.jsx","index.js"],"names":["drawLine","ctx","x1","y1","x2","y2","beginPath","setLineDash","moveTo","lineTo","lineWidth","strokeStyle","stroke","restoreSnap","snapshot","putImageData","getMousePos","canvas","evt","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","drawCrosshair","width","height","showHair","module","exports","drawGrid","data","chartType","padY","min","max","diff","type","pad","console","log","pointsArray","clearRect","Math","high","map","value","low","totalH","diffH","gridX","gridY","spaceX","spaceY","i","vLine","gradH","font","fillStyle","textAlign","fillText","toFixed","result","calculated","actualP","point","length","startY","pX","lineCap","lineJoin","myData","splice","reverse","push","drawGraphLine","open","close","fillRect","y3","y4","drawGraphCandle","drawGraphBar","openP","closeP","openH","closeH","highH","lowH","firstcandle","drawGraphHeikenAshi","getImageData","takeSnap","addEventListener","e","getContext","arc","PI","fill","gradChange","deltaY","require","Chart","canvasRef","React","createRef","contextRef","selectChart","a","setState","target","fetch","then","response","json","sample","renderGrid","state","context","canvasStyle","scale","window","devicePixelRatio","style","grid","componentDidMount","prevState","current","clientWidth","clientHeight","this","gY","className","onClick","id","name","ref","onWheel","gradResize","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58029cc4.chunk.js","sourcesContent":["function drawGrid(data, { width, height }, ctx, canvas, chartType, padY) {\r\n    let checkSnap = true;\r\n    let min, max;\r\n    let type = chartType;\r\n    let diff;\r\n\r\n\r\n    let pad = padY ? padY : 0;\r\n\r\n    console.log('starting pad', pad);\r\n\r\n\r\n    // console.log(\"raw\", data);\r\n\r\n    let pointsArray = [];\r\n\r\n    if (type === 'line') {\r\n\r\n        ctx.clearRect(0, 0, width, height);\r\n        max = Math.max(...data) + pad;\r\n        min = Math.min(...data) - pad;\r\n\r\n    }\r\n\r\n    else if (type === 'candlestick' || 'barchart' || 'heikenashi') {\r\n\r\n        ctx.clearRect(0, 0, width, height);\r\n        let high = data.map(value => value.high);\r\n        let low = data.map(value => value.low);\r\n        max = Math.max(...high) + pad;\r\n        min = Math.min(...low) - pad;\r\n    }\r\n\r\n    console.log(\"min/max\", min, max);\r\n\r\n    //width of the graduations\r\n    width = width - 80;\r\n\r\n    diff = max - min;\r\n\r\n    // let actualP = (point) => {\r\n    //     return ((point - min) / diff) * height;\r\n    // };\r\n\r\n\r\n    //horizontal and vertical number of lines\r\n    let vLine = 20;\r\n    let hLine = 10;\r\n\r\n\r\n    let totalH = (diff + 2 * pad);\r\n\r\n    let diffH = totalH / hLine;\r\n\r\n    console.log(\"totalH\", totalH);\r\n\r\n    //grid factor for lines\r\n    let gridX = width / vLine;\r\n    let gridY = height / hLine;\r\n\r\n    let spaceX = gridX;\r\n    let spaceY = gridY;\r\n\r\n\r\n\r\n    for (let i = 1; i < vLine + 2; i++) {\r\n        drawLine({ x1: gridX, y1: 0, x2: gridX, y2: height }, ctx);\r\n        gridX += spaceX;\r\n\r\n        if (gridX > width) break;\r\n    }\r\n\r\n    let gradH = max + pad;\r\n    gradH -= diffH;\r\n    for (let i = 1; i < hLine; i++) {\r\n        drawLine({ x1: 0, y1: gridY, x2: width, y2: gridY }, ctx);\r\n\r\n        ctx.beginPath()\r\n        ctx.font = \"12px Arial\";\r\n        ctx.fillStyle = \"white\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.fillText(`${gradH.toFixed(2)}`, width + 5, gridY);\r\n\r\n        gridY += spaceY;\r\n        gradH -= diffH;\r\n    }\r\n    let result = { max, min, diff, width, height, spaceX, spaceY };\r\n\r\n\r\n\r\n    if (type === 'line') {\r\n        drawGraphLine(data, result, ctx, pointsArray);\r\n    }\r\n\r\n    else if (type === 'candlestick') {\r\n        drawGraphCandle(data, result, ctx, pointsArray);\r\n    }\r\n\r\n    else if (type === 'barchart') {\r\n        drawGraphBar(data, result, ctx, pointsArray);\r\n    }\r\n\r\n    else if (type === 'heikenashi') {\r\n        drawGraphHeikenAshi(data, result, ctx, pointsArray);\r\n    }\r\n\r\n\r\n\r\n\r\n    let snapshot;\r\n\r\n\r\n    snapshot = takeSnap(canvas, ctx)\r\n\r\n    //mouse events\r\n\r\n    let showHair = true;\r\n\r\n    canvas.addEventListener('mousemove', (e) => {\r\n        // let ctx = canvas.getContext('2d')\r\n        var { x } = getMousePos(canvas, e);\r\n\r\n        //if pointer moves towards the graduation\r\n        if (x > width) {\r\n            showHair = false;\r\n        }\r\n        else {\r\n            showHair = true;\r\n        }\r\n    })\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n        let ctx = canvas.getContext('2d')\r\n        var { x, y } = getMousePos(canvas, e);\r\n        restoreSnap(ctx, snapshot)\r\n        drawCrosshair(ctx, x, y, width, height, showHair)\r\n\r\n    })\r\n\r\n    canvas.addEventListener('mousemove', (e) => {\r\n        let ctx = canvas.getContext('2d')\r\n        var { x, y } = getMousePos(canvas, e);\r\n        restoreSnap(ctx, snapshot)\r\n        drawCrosshair(ctx, x, y, width, height, showHair)\r\n\r\n        if (checkSnap && type === 'line') {\r\n            pointsArray.map((value) => {\r\n                if (value.x >= x - 12 && value.x <= x + 12 && value.y >= y - 12 && value.y <= y + 12) {\r\n\r\n                    restoreSnap(ctx, snapshot)\r\n                    ctx.beginPath();\r\n                    ctx.setLineDash([]);\r\n                    ctx.lineWidth = 1.6;\r\n                    ctx.fillStyle = \"#FF0000\";\r\n                    ctx.arc(value.x, value.y, 4, 0, 2 * Math.PI);\r\n                    ctx.fill();\r\n                    ctx.stroke();\r\n                }\r\n                return null;\r\n            })\r\n        }\r\n\r\n    })\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction drawLine({ x1, y1, x2, y2 }, ctx) {\r\n    ctx.beginPath();\r\n    ctx.setLineDash([]);\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = \"#2B2B2B\";\r\n    ctx.stroke();\r\n\r\n}\r\n\r\n\r\n//for line chart\r\n\r\nfunction drawGraphLine(data, calculated, ctx, pointsArray) {\r\n    const { max, min, diff, width, height, spaceX, spaceY } = calculated;\r\n    console.log(max, min, diff, width, height, spaceX, spaceY);\r\n\r\n    //gives the canvas point\r\n    let actualP = (point) => {\r\n        return ((point - min) / diff) * height;\r\n    };\r\n\r\n    let length = data.length;\r\n    let startY = data[length - 1];\r\n\r\n\r\n\r\n    let pX = 0;\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 2;\r\n    // ctx.shadowBlur = 2;\r\n    // ctx.shadowColor = 'rgb(255, 255, 255)';\r\n    ctx.lineCap = 'square';\r\n    ctx.lineJoin = 'round';\r\n    ctx.setLineDash([]);\r\n    ctx.moveTo(pX, 500 - actualP(startY));\r\n    pX += spaceX;\r\n\r\n    let myData = [...data];\r\n\r\n    console.log(myData.splice(length - 1, 1));\r\n    // eslint-disable-next-line\r\n    myData.reverse().map((value) => {\r\n        ctx.lineTo(pX, 500 - actualP(value));\r\n        pointsArray.push({ x: pX, y: 500 - actualP(value) })\r\n        ctx.strokeStyle = 'rgba(255, 255, 255, 1)'\r\n        ctx.stroke();\r\n        pX += spaceX;\r\n    });\r\n\r\n}\r\n\r\n\r\n// for candlestick chart\r\nfunction drawGraphCandle(data, calculated, ctx, pointsArray) {\r\n    const { min, diff, height, spaceX } = calculated;\r\n\r\n    let actualP = (point) => {\r\n        return ((point - min) / diff) * height;\r\n    };\r\n\r\n\r\n    let pX = 0;\r\n    let myData = [...data];\r\n\r\n    myData.reverse().map((value) => {\r\n        ctx.beginPath();\r\n        ctx.setLineDash([]);\r\n        let { high, low, open, close } = value\r\n        ctx.moveTo(pX, 500 - actualP(high))\r\n        ctx.lineTo(pX, 500 - actualP(low))\r\n\r\n        if (close > open) {\r\n            ctx.strokeStyle = \"#519C58\"\r\n        }\r\n        else if (close < open) {\r\n            ctx.strokeStyle = \"#E3415D\"\r\n        }\r\n        ctx.lineWidth = 2;\r\n        ctx.stroke();\r\n\r\n        // for drawing rectangles\r\n\r\n        ctx.beginPath();\r\n        ctx.setLineDash([]);\r\n\r\n        if (close > open) {\r\n            ctx.strokeStyle = \"#519C58\"\r\n            ctx.fillStyle = \"#519C58\"\r\n            ctx.fillRect(pX - 5, 500 - actualP(close), 10, actualP(close) - actualP(open))\r\n        }\r\n\r\n        else if (close < open) {\r\n            ctx.strokeStyle = \"#E3415D\"\r\n            ctx.fillStyle = \"#E3415D\"\r\n            ctx.fillRect(pX - 5, 500 - actualP(open), 10, actualP(open) - actualP(close))\r\n        }\r\n\r\n        pointsArray.push({ x: pX, y1: 500 - actualP(high), y2: 500 - actualP(low), y3: 500 - actualP(open), y4: 500 - actualP(close) })\r\n\r\n        ctx.stroke();\r\n        pX += spaceX;\r\n        return null;\r\n    })\r\n\r\n\r\n}\r\n\r\nfunction drawGraphBar(data, calculated, ctx, pointsArray) {\r\n    const { min, diff, height, spaceX } = calculated;\r\n\r\n    let actualP = (point) => {\r\n        return ((point - min) / diff) * height;\r\n    };\r\n\r\n\r\n    let pX = 0;\r\n    let myData = [...data];\r\n\r\n    myData.reverse().map((value) => {\r\n        ctx.beginPath();\r\n        ctx.setLineDash([]);\r\n        let { high, low, open, close } = value\r\n        ctx.moveTo(pX, 500 - actualP(high))\r\n        ctx.lineTo(pX, 500 - actualP(low))\r\n\r\n        if (close > open) {\r\n            ctx.strokeStyle = \"#519C58\"\r\n        }\r\n        else if (close < open) {\r\n            ctx.strokeStyle = \"#E3415D\"\r\n        }\r\n        ctx.lineWidth = 2;\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath()\r\n        ctx.setLineDash([]);\r\n        //drawing left and right bars\r\n        if (close > open) {\r\n            ctx.strokeStyle = \"#519C58\"\r\n            ctx.moveTo(pX, 500 - actualP(close))\r\n            ctx.lineTo(pX + 8, 500 - actualP(close))\r\n            ctx.stroke()\r\n\r\n            ctx.moveTo(pX, 500 - actualP(open))\r\n            ctx.lineTo(pX - 8, 500 - actualP(open))\r\n            ctx.stroke()\r\n        }\r\n\r\n        else if (close < open) {\r\n            ctx.strokeStyle = \"#E3415D\"\r\n\r\n            ctx.moveTo(pX, 500 - actualP(open))\r\n            ctx.lineTo(pX - 8, 500 - actualP(open))\r\n            ctx.stroke()\r\n\r\n            ctx.moveTo(pX, 500 - actualP(close))\r\n            ctx.lineTo(pX + 8, 500 - actualP(close))\r\n            ctx.stroke()\r\n\r\n        }\r\n\r\n\r\n        pX += spaceX;\r\n        return null;\r\n    })\r\n\r\n\r\n}\r\n\r\nfunction drawGraphHeikenAshi(data, calculated, ctx, pointsArray) {\r\n\r\n\r\n    const { min, diff, height, spaceX } = calculated;\r\n\r\n    let actualP = (point) => {\r\n        return ((point - min) / diff) * height;\r\n    };\r\n\r\n\r\n    let pX = 0;\r\n    let myData = [...data];\r\n\r\n    //let p = previous bar\r\n    // let H = heikenashi bar\r\n\r\n    // formula\r\n    // Close= 1/4 (Open+Close+Low+Close)\r\n    // (The average price of the current bar)\r\n    // Open= 1/2(Open of Prev. Bar+Close of Prev. Bar)\r\n    // (The midpoint of the previous bar)\r\n    // High=Max[High, Open, Close]\r\n    // Low=Min[Low, Open, Close]\r\n\r\n    let firstcandle = true;\r\n    let openP, closeP, openH, closeH, highH, lowH;\r\n\r\n\r\n    myData.reverse().map((value) => {\r\n        ctx.beginPath();\r\n        ctx.setLineDash([]);\r\n        let { high, low, open, close } = value\r\n\r\n        if (firstcandle) {\r\n            closeH = ((open + high + close + low) / 4)\r\n            openH = ((open + close) / 2)\r\n            ctx.moveTo(pX, 500 - actualP(high))\r\n            ctx.lineTo(pX, 500 - actualP(low))\r\n\r\n            console.log('first candle', closeH, openH);\r\n        }\r\n\r\n        else {\r\n            closeH = ((open + high + close + low) / 4)\r\n            openH = ((openP + closeP) / 2)\r\n            highH = Math.max(high, open, close)\r\n            lowH = Math.min(low, open, close)\r\n            ctx.moveTo(pX, 500 - actualP(highH))\r\n            ctx.lineTo(pX, 500 - actualP(lowH))\r\n\r\n        }\r\n\r\n        if (closeH > openH) {\r\n            ctx.strokeStyle = \"#519C58\"\r\n        }\r\n        else if (closeH < openH) {\r\n            ctx.strokeStyle = \"#E3415D\"\r\n        }\r\n        ctx.lineWidth = 2;\r\n        ctx.stroke();\r\n\r\n        // for drawing rectangles\r\n\r\n        ctx.beginPath();\r\n        ctx.setLineDash([]);\r\n\r\n        if (closeH > openH) {\r\n            ctx.strokeStyle = \"#519C58\"\r\n            ctx.fillStyle = \"#519C58\"\r\n            ctx.fillRect(pX - 5, 500 - actualP(closeH), 10, actualP(closeH) - actualP(openH))\r\n        }\r\n\r\n        else if (closeH < openH) {\r\n            ctx.strokeStyle = \"#E3415D\"\r\n            ctx.fillStyle = \"#E3415D\"\r\n            ctx.fillRect(pX - 5, 500 - actualP(openH), 10, actualP(openH) - actualP(closeH))\r\n        }\r\n\r\n\r\n        openP = openH;\r\n        closeP = closeH;\r\n\r\n        ctx.stroke();\r\n        pX += spaceX;\r\n        firstcandle = false;\r\n        return null;\r\n    })\r\n\r\n\r\n}\r\n\r\n//storing and retreiving min max\r\n\r\n\r\n\r\n\r\n// for graduation changes\r\n\r\nfunction gradChange(e, padY) {\r\n\r\n    if (e.deltaY < 0) {\r\n\r\n        console.log(\"wheeling up\")\r\n\r\n        if (padY <= 0) return padY = 0;\r\n\r\n        else return padY -= 5;\r\n\r\n    }\r\n\r\n    else if (e.deltaY > 0) {\r\n\r\n        console.log(\"wheeling down\")\r\n\r\n        return padY += 5;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//snapshots\r\n\r\nfunction takeSnap(canvas, ctx) {\r\n\r\n    return ctx.getImageData(0, 0, canvas.width, canvas.height)\r\n}\r\n\r\nfunction restoreSnap(ctx, snapshot) {\r\n\r\n    ctx.putImageData(snapshot, 0, 0)\r\n}\r\n\r\n// mouse events\r\n\r\nfunction getMousePos(canvas, evt) {\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n    };\r\n}\r\n\r\n\r\n//Crosshair\r\n\r\nfunction drawCrosshair(ctx, x, y, width, height, showHair) {\r\n    if (showHair === true) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(width, y);\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, 0);\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, height);\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(0, y);\r\n        ctx.strokeStyle = \"#FFFFFF\"\r\n        ctx.lineWidth = 0.8;\r\n        ctx.setLineDash([5]);\r\n        ctx.stroke();\r\n    }\r\n    else return;\r\n\r\n\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    drawGrid,\r\n    drawLine,\r\n    gradChange\r\n};\r\n","import React from 'react'\r\n\r\n// css\r\nimport './chart.css'\r\n\r\n//helper function\r\nconst { drawGrid , gradChange } = require('../helper')\r\n\r\n\r\n\r\n\r\n\r\nclass Chart extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            canvasStyle:{\r\n                width:'',\r\n                height:''\r\n            },\r\n            context:'',\r\n            data:[],\r\n            padY:10,\r\n            grid: false,\r\n            chartType:'line'\r\n        }\r\n\r\n\r\n    }\r\n    canvasRef = React.createRef()\r\n    contextRef = React.createRef()\r\n\r\n    selectChart= async (e)=>{\r\n\r\n        this.setState({\r\n                chartType:e.target.value\r\n            })\r\n        if(e.target.value==='line'){\r\n            await fetch(\"https://api.jsonbin.io/b/6004dadff98f6e35d5fdca2a\")\r\n            .then(response=>response.json()).then(data=> {\r\n            let result = data;\r\n            result.length=10;\r\n            let sample = result.map((value)=>{\r\n                return value['close'];\r\n            })\r\n            this.setState({\r\n                data: sample\r\n            },()=>{\r\n                this.renderGrid(this.state.context ,this.state.canvasStyle)\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n        else if(e.target.value==='candlestick' || 'barchart' || 'heikenashi'){\r\n            this.setState({\r\n                chartType:e.target.value\r\n            })\r\n\r\n            await fetch(\"https://api.jsonbin.io/b/6004dadff98f6e35d5fdca2a\")\r\n            .then(response=>response.json()).then(data=> {\r\n            let result = data;\r\n            result.length=10;\r\n            this.setState({\r\n                data: result\r\n            },()=>{\r\n\r\n            this.renderGrid(this.state.context ,this.state.canvasStyle)\r\n            })\r\n        })\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n\r\n    renderGrid=(canvas)=>{\r\n        const {width,height} = canvas.getBoundingClientRect();\r\n\r\n        let scale = window.devicePixelRatio;\r\n\r\n\r\n        canvas.width=width*scale;\r\n        canvas.height= height*scale;\r\n        const ctx= canvas.getContext('2d')\r\n\r\n        ctx.scale(scale,scale)\r\n\r\n        canvas.style.width = width + 'px';\r\n        canvas.style.height = height + 'px';\r\n\r\n        drawGrid(this.state.data,{width,height},ctx,canvas,this.state.chartType,this.state.padY)\r\n        this.setState({\r\n            grid:true\r\n        })\r\n    }\r\n\r\n    gradResize(e){\r\n        let canvas = this.state.context\r\n        let gY = gradChange(e,this.state.padY)\r\n\r\n\r\n        console.log(gY);\r\n\r\n        const {width,height} = canvas.getBoundingClientRect();\r\n        const ctx= canvas.getContext('2d')\r\n\r\n\r\n        this.setState({\r\n            padY:gY,\r\n        },()=>{\r\n            drawGrid(this.state.data,{width,height},ctx,canvas,this.state.chartType,this.state.padY)\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount= async()=>{\r\n        this.setState((prevState)=>({\r\n            canvasStyle:{\r\n                ...prevState.canvasStyle,\r\n                width:`${this.canvasRef.current.clientWidth}px`,\r\n                height:`${this.canvasRef.current.clientHeight}px`,\r\n            },\r\n            context:this.contextRef.current,\r\n        }))\r\n        //https://api.jsonbin.io/b/6004dadff98f6e35d5fdca2a\r\n\r\n        //http://api.marketstack.com/v1/eod?access_key=62378be415be5b8e1410d7534fef6593&symbols=AAPL\r\n\r\n        await fetch(\"https://api.jsonbin.io/b/6004dadff98f6e35d5fdca2a\")\r\n        .then(response=>response.json())\r\n        .then(data=> {\r\n        let result = data;\r\n        result.length = 10;\r\n        let sample = result.map((value)=>{\r\n            return value['close'];\r\n        })\r\n        this.setState({\r\n            data: sample\r\n        },()=>{\r\n\r\n        this.renderGrid(this.state.context ,this.state.canvasStyle)\r\n        })\r\n    })\r\n\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"chart-type\">\r\n                <input onClick={(e)=>this.selectChart(e)}  type=\"radio\" id=\"chart1\" name=\"chart\" value=\"line\"/>\r\n                <label> Line Chart</label>\r\n                <input onClick={(e)=>this.selectChart(e)}  type=\"radio\" id=\"chart2\" name=\"chart\" value=\"candlestick\"/>\r\n                <label> Candlestick</label>\r\n                <input onClick={(e)=>this.selectChart(e)}  type=\"radio\" id=\"chart3\" name=\"chart\" value=\"barchart\"/>\r\n                <label> Bar</label>\r\n                <input onClick={(e)=>this.selectChart(e)}  type=\"radio\" id=\"chart4\" name=\"chart\" value=\"heikenashi\"/>\r\n                <label> Heiken Ashi</label>\r\n            </div>\r\n            <div  ref={this.canvasRef} id=\"canvas-main\">\r\n                <div id=\"canvas-child\">\r\n                    <canvas onWheel ={(e)=>this.gradResize(e)}ref={this.contextRef} style={this.state.canvasStyle}> </canvas>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart\r\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Chart from './chart/chart.component'\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Chart />\n      </>\n\n    )\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}